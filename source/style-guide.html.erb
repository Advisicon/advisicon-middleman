---
title: Style Guide
keywords:
---

<div class="row">

  <h1>Forms</h1>
  <form action="#" id="" class="training form" role="form">
    <legend>Form Controls</legend>

    <!-- EXAMPLE: help text -->
    <p>
      Paragraphs within forms are for helpful text. Assist the users, but
      don't overwhelm them!
    </p> 

    <!-- EXAMPLE: checkboxes -->
    <fieldset>
      <label>Checkbox</label>
      <div class="checkbox">
        <label>
          <input type="checkbox" name="optionsCheckbox" value="option1">
          Option one is this and that&ndash;be sure to include why it's great
        </label>
      </div>
      <div class="checkbox">
        <label>
          <input type="checkbox" name="optionsCheckbox" value="option2">
          Option two is that and this
        </label>
      </div>
    </fieldset>

    <!-- EXAMPLE: radio buttons -->
    <fieldset class="radio-group">
      <label>Radio buttons</label>
      <label class="radio">
        <input type="radio" name="radioOption" id="radioOption" value="1">
        Option one
      </label>
      <label class="radio">
        <input type="radio" name="radioOption" id="radioOption" value="2">
        Option two
      </label>
    </fieldset>

    <!-- EXAMPLE: text inputs -->
    <fieldset>
      <label for="textInput">Text input</label>
      <input type="text" id="textInput" name="textInput" class="form-control">
    </fieldset>

    <fieldset>
      <label for="textInputRequired">Required text input</label>
      <input type="text" id="textInputRequired" name="textInputRequied" class="form-control" required>
    </fieldset>

    <fieldset>
      <label for="textInputPlaceholder">Placeholder in text input</label>
      <input type="text" id="textInputPlaceholder" name="textInputPlaceholder" class="form-control" placeholder="This is placeholder text">
      <p>
        Placeholder text disapears when the users begins to type in the 
        input field.
      </p>
    </fieldset>

    <!-- EXAMPLE: selection lists -->
    <fieldset>
      <label for="selectList">Selection list</label>
      <select id="selectList" name="selectList">
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
      </select>
    </fieldset>

    <fieldset>
      <label for="selectListHTML5">Selection list with user entry option</label>
      <input type="text" name="selectListHTML5" list="optionsDatalist">
      <datalist id="optionsDatalist">
        <option value="1">One</option>
        <option value="2">Two</option>
        <option value="3">Three</option>
        <option value="4">Four</option>
      </datalist>
    </fieldset>

    <!-- EXAMPLE: submit -->
    <button type="submit">OK!</button>

  </form>

  <section class="main-content">
    <h1>Icon &amp; Small Image Featurettes</h1>

    <!-- EXAMPLE: Icon Featurettes -->
    <section class="featurette">
      <%= link_to image_tag(lorem.image('200'), alt: "", class: "featurette-image"), '#',  border: '0' %>
      <div class="featurette-content">
        <h1 class="featurette-heading">Awesome Statement.
          <span class="muted">Attention-grabbing byline pulls them in.</span>
        </h1>
        <p class="lead"><%= lorem.sentences((3..6).to_a.sample) %>.</p>
        <p>
          <%= link_to 'Call to action', '#', class: "featurette-btn" %>
        </p>
      </div>
    </section>

    <section class="featurette">
      <%= link_to image_tag(lorem.image('200'), alt: "", class: "featurette-image"), '#',  border: '0' %>
      <div class="featurette-content">
        <h1 class="featurette-heading">Images alternate sides.
          <span class="muted">Even ones go on the left.</span>
        </h1>
        <p class="lead"><%= lorem.sentences((3..6).to_a.sample) %>.</p>
        <p>
          <%= link_to lorem.words(3).capitalize, '#', class: "featurette-btn" %>
        </p>
      </div>
    </section>

    <section class="featurette">
      <%= link_to image_tag(lorem.image('200'), alt: "", class: "featurette-image"), '#',  border: '0' %>
      <div class="featurette-content">
        <h1 class="featurette-heading">The third featurette.
          <span class="muted">Images in odd featurettes go on the right.</span>
        </h1>
        <p class="lead"><%= lorem.sentences((3..6).to_a.sample) %>.</p>
        <p>
          <%= link_to lorem.words(2).capitalize, '#', class: "featurette-btn" %>
        </p>
      </div>
    </section>
  </section>

  <section class="main-content">
    <h1>Impact Featurettes</h1>

    <section class="featurette-impact">
      <%= link_to image_tag(lorem.image('600'), alt: "", class: "featurette-image"), '#',  border: '0' %>
      <div class="featurette-content">
        <h1 class="featurette-heading">
          Stand out with impact featurettes.
        </h1>
        <p class="lead"><%= lorem.paragraph %>.</p>
        <p>
          <%= link_to lorem.words(3).capitalize, '#', class: "featurette-btn" %>
        </p>
      </div>
    </section>
    <section class="featurette-impact">
      <video controls poster="/videos/placeholder.png" class="featurette-video">
        <source src="/videos/placeholder2.mp4" type="video/mp4">
      </video>
      <div class="featurette-content">
        <h1 class="featurette-heading">
          Bring your content alive with videos.
        </h1>
        <p class="lead"><%= lorem.paragraph %>.</p>
        <p>
          <%= link_to lorem.words(3).capitalize, '#', class: "featurette-btn" %>
        </p>
      </div>
    </section>
  </section>

  <section class="secondary-content">
    <section class="featurette-impact bgvid">
      <video loop poster="/videos/placeholder3.png">
        <source src="/videos/placeholder3.mp4" type="video/mp4">
      </video>
      <div class="featurette-content">
        <h1 class="featurette-heading">
          Use subtle background video to support your content.
        </h1>
        <p class="lead"><%= lorem.sentences((6..24).to_a.sample) %>.</p>
        <p>
          <%= link_to lorem.words(3).capitalize, '#', class: "featurette-btn" %>
        </p>
      </div>
    </section>
    
    <section class="featurette-impact bgvid">
      <video loop poster="/videos/placeholder.png">
        <source src="/videos/placeholder.mp4" type="video/mp4">
      </video>
      <div class="featurette-content right">
        <h1 class="featurette-heading">
          You can switch the position of the background video content from left to right.
        </h1>
        <p class="lead"><%= lorem.sentences((6..24).to_a.sample) %>.</p>
        <p>
          <%= link_to lorem.words(3).capitalize, '#', class: "featurette-btn" %>
        </p>
      </div>
    </section>
  </section>

  <section class="data-display" id="first-dataset">
    <h1>Data Display</h1>
    <div class="chart"></div>
    <style>
      path { 
        fill: none;
      }
      .employee { 
        stroke-opacity: 0.25;
        stroke-width: 2;
        -webkit-transition: all .25s ease-in-out;
        -moz-transition: all .25s ease-in-out;
        -o-transition: all .25s ease-in-out;
        transition: all .25s ease-in-out;
      }
      .employee:hover { 
        stroke-opacity: 0.9; 
        stroke-width: 3; 
        font-size: 1.125em;
        font-weight: bold;
      }
      .axis path,
      .axis line {
        fill: none;
        stroke: #ccc;
        stroke-width: 1;
        shape-rendering: crispEdges;
      }
      .x.axis path { display: none; }
      .axis text { fill: #ccc; }
      .overtime { 
        fill: #fdd;
        fill: rgba(255,0,0,.0625);
      }
    </style>
    <script type="text/javascript">

      var margin = {top: 30, right: 160, bottom: 30, left: 50},
          width = $(".data-display .chart").width() - margin.left - margin.right,
          height = $(window).height() - 60 - margin.top - margin.bottom;

      var parseDate = d3.time.format('%Y-%m-%d').parse;

      var x = d3.time.scale()
        .range([0, width]);

      var y = d3.scale.linear()
        .range([height, 0]);

      var color = d3.scale.category20b();

      var xAxis = d3.svg.axis()
        .scale(x)
        .orient("bottom").ticks(5);

      var yAxis = d3.svg.axis()
        .scale(y)
        .orient("left");

      var line = d3.svg.line()
        .interpolate("basis")
        .x(function(d) { return x( d.date ); })
        .y(function(d) { return y( d.hours ); });

      var svg = d3.select("#first-dataset .chart")
        .append("svg")
          .attr("width", width + margin.left + margin.right)
          .attr("height", height + margin.top + margin.bottom)
        .append("g")
          .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

      // Get the data
      d3.tsv("/data/hours.tsv", function(error, data) {
        color.domain(d3.keys(data[0]).filter(function(key) {
          return key !== "date";
        }));

        data.forEach(function(d) {
          d.date = parseDate(d.date);
          console.log(d.date);
        });

        var employees = color.domain().map(function(name) {
          return {
            name: name,
            values: data.map(function(d) {
              return {
                date:  d.date, 
                hours: +d[name]
              };
            })
          };
        });

        // Scale the range of the data
        x.domain(d3.extent(data, function(d) { return d.date; }));

        y.domain([
          0,
          d3.max(employees, function(e) {
            return d3.max(e.values, function(v) { 
              return v.hours; 
            });
          })
        ]);

        // Add the overtime box
        svg.append("rect")
          .attr("x", 0)
          .attr("y", 0)
          .attr("width", width)
          .attr("height", y(40))
          .attr("class", "overtime");

        svg.append("g")
          .attr("class", "x axis")
          .attr("transform", "translate(0," + height + ")")
          .call(xAxis);

        svg.append("g")
            .attr("class", "y axis")
            .call(yAxis)
          .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 6)
            .attr("dy", ".71em")
            .style("text-anchor", "end")
            .text("Hours Worked");

        var employee = svg.selectAll(".employee")
            .data(employees)
          .enter().append("g")
            .attr("class", "employee");

        // Add the valueline paths
        employee.append("path")
          .attr("class", "line")
          .attr("d", function(d) { return line(d.values); })
          .attr("stroke", function(d) { return color(d.name); });

        // Add labels
        employee.append("text")
          .datum(function(d) {
            return {name: d.name, value: d.values[d.values.length - 1]};
          })
          .attr("x", width + 3)
          .attr("y", function (d,i) { return (i * 20) + 9; })
          .attr("dy", ".35em")
          .text(function(d) { return d.name; })
          .style("fill", function(d) { return color(d.name); });

      });

    </script>
    <div class="data-display-content">
      <p>Advisicon's billable totals for all work.</p>
    </div>

  </section>

</div>
